<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianqi.edu.mapper.QuestionJudgeMapper" >
  <resultMap id="BaseResultMap" type="com.qianqi.edu.pojo.QuestionJudge" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="answer" property="answer" jdbcType="BIT" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="BIGINT" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="difficult" property="difficult" jdbcType="INTEGER" />
    <result column="knowledge_point" property="knowledgePoint" jdbcType="VARCHAR" />
    <result column="normal_time" property="normalTime" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qianqi.edu.pojo.QuestionJudge" extends="BaseResultMap" >
    <result column="context" property="context" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, answer, score, teacher_id, subject_id, grade_id, difficult, knowledge_point, 
    normal_time, created, updated
  </sql>
  <sql id="Blob_Column_List" >
    context
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qianqi.edu.pojo.QuestionJudgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question_judge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qianqi.edu.pojo.QuestionJudgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_judge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question_judge
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from question_judge
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianqi.edu.pojo.QuestionJudgeExample" >
    delete from question_judge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianqi.edu.pojo.QuestionJudge" >
    insert into question_judge (id, answer, score, 
      teacher_id, subject_id, grade_id, 
      difficult, knowledge_point, normal_time, 
      created, updated, context
      )
    values (#{id,jdbcType=BIGINT}, #{answer,jdbcType=BIT}, #{score,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=BIGINT}, #{subjectId,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, 
      #{difficult,jdbcType=INTEGER}, #{knowledgePoint,jdbcType=VARCHAR}, #{normalTime,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, #{context,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qianqi.edu.pojo.QuestionJudge" >
    insert into question_judge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="difficult != null" >
        difficult,
      </if>
      <if test="knowledgePoint != null" >
        knowledge_point,
      </if>
      <if test="normalTime != null" >
        normal_time,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="context != null" >
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=BIT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="difficult != null" >
        #{difficult,jdbcType=INTEGER},
      </if>
      <if test="knowledgePoint != null" >
        #{knowledgePoint,jdbcType=VARCHAR},
      </if>
      <if test="normalTime != null" >
        #{normalTime,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="context != null" >
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qianqi.edu.pojo.QuestionJudgeExample" resultType="java.lang.Integer" >
    select count(*) from question_judge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_judge
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=BIT},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=BIGINT},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.difficult != null" >
        difficult = #{record.difficult,jdbcType=INTEGER},
      </if>
      <if test="record.knowledgePoint != null" >
        knowledge_point = #{record.knowledgePoint,jdbcType=VARCHAR},
      </if>
      <if test="record.normalTime != null" >
        normal_time = #{record.normalTime,jdbcType=INTEGER},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.context != null" >
        context = #{record.context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update question_judge
    set id = #{record.id,jdbcType=BIGINT},
      answer = #{record.answer,jdbcType=BIT},
      score = #{record.score,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      difficult = #{record.difficult,jdbcType=INTEGER},
      knowledge_point = #{record.knowledgePoint,jdbcType=VARCHAR},
      normal_time = #{record.normalTime,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      context = #{record.context,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_judge
    set id = #{record.id,jdbcType=BIGINT},
      answer = #{record.answer,jdbcType=BIT},
      score = #{record.score,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      difficult = #{record.difficult,jdbcType=INTEGER},
      knowledge_point = #{record.knowledgePoint,jdbcType=VARCHAR},
      normal_time = #{record.normalTime,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianqi.edu.pojo.QuestionJudge" >
    update question_judge
    <set >
      <if test="answer != null" >
        answer = #{answer,jdbcType=BIT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="difficult != null" >
        difficult = #{difficult,jdbcType=INTEGER},
      </if>
      <if test="knowledgePoint != null" >
        knowledge_point = #{knowledgePoint,jdbcType=VARCHAR},
      </if>
      <if test="normalTime != null" >
        normal_time = #{normalTime,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qianqi.edu.pojo.QuestionJudge" >
    update question_judge
    set answer = #{answer,jdbcType=BIT},
      score = #{score,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      subject_id = #{subjectId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      difficult = #{difficult,jdbcType=INTEGER},
      knowledge_point = #{knowledgePoint,jdbcType=VARCHAR},
      normal_time = #{normalTime,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianqi.edu.pojo.QuestionJudge" >
    update question_judge
    set answer = #{answer,jdbcType=BIT},
      score = #{score,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      subject_id = #{subjectId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      difficult = #{difficult,jdbcType=INTEGER},
      knowledge_point = #{knowledgePoint,jdbcType=VARCHAR},
      normal_time = #{normalTime,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>