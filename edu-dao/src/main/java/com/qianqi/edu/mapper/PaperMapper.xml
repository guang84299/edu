<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qianqi.edu.mapper.PaperMapper" >
  <resultMap id="BaseResultMap" type="com.qianqi.edu.pojo.Paper" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="BIGINT" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="teacher_subject_id" property="teacherSubjectId" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="check_evl_time" property="checkEvlTime" jdbcType="BIGINT" />
    <result column="student_ids" property="studentIds" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, name, teacher_id, subject_id, teacher_subject_id, state, updated, created, 
    check_evl_time, student_ids
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qianqi.edu.pojo.PaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from paper
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from paper
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianqi.edu.pojo.PaperExample" >
    delete from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianqi.edu.pojo.Paper" >
    insert into paper (id, type, name, 
      teacher_id, subject_id, teacher_subject_id, 
      state, updated, created, 
      check_evl_time, student_ids)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=BIGINT}, #{subjectId,jdbcType=INTEGER}, #{teacherSubjectId,jdbcType=BIGINT}, 
      #{state,jdbcType=INTEGER}, #{updated,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}, 
      #{checkEvlTime,jdbcType=BIGINT}, #{studentIds,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qianqi.edu.pojo.Paper" >
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="teacherSubjectId != null" >
        teacher_subject_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="checkEvlTime != null" >
        check_evl_time,
      </if>
      <if test="studentIds != null" >
        student_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="teacherSubjectId != null" >
        #{teacherSubjectId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="checkEvlTime != null" >
        #{checkEvlTime,jdbcType=BIGINT},
      </if>
      <if test="studentIds != null" >
        #{studentIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qianqi.edu.pojo.PaperExample" resultType="java.lang.Integer" >
    select count(*) from paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update paper
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=BIGINT},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherSubjectId != null" >
        teacher_subject_id = #{record.teacherSubjectId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkEvlTime != null" >
        check_evl_time = #{record.checkEvlTime,jdbcType=BIGINT},
      </if>
      <if test="record.studentIds != null" >
        student_ids = #{record.studentIds,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update paper
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      teacher_subject_id = #{record.teacherSubjectId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      created = #{record.created,jdbcType=TIMESTAMP},
      check_evl_time = #{record.checkEvlTime,jdbcType=BIGINT},
      student_ids = #{record.studentIds,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianqi.edu.pojo.Paper" >
    update paper
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="teacherSubjectId != null" >
        teacher_subject_id = #{teacherSubjectId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="checkEvlTime != null" >
        check_evl_time = #{checkEvlTime,jdbcType=BIGINT},
      </if>
      <if test="studentIds != null" >
        student_ids = #{studentIds,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianqi.edu.pojo.Paper" >
    update paper
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      subject_id = #{subjectId,jdbcType=INTEGER},
      teacher_subject_id = #{teacherSubjectId,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP},
      check_evl_time = #{checkEvlTime,jdbcType=BIGINT},
      student_ids = #{studentIds,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>